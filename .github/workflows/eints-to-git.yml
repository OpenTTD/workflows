name: Eints to Git

on:
  schedule:
  - cron: '45 17 * * *'
  - cron: '45 18 * * *'
  workflow_dispatch:

env:
  SCHEDULE_HOUR: 19

jobs:
  eints-to-git:
    name: Eints To Git

    runs-on: ubuntu-latest

    steps:
    - name: Check for time in CE(S)T
      if: github.event_name != 'workflow_dispatch'
      id: cest_time
      run: |
        # GitHub Actions run in UTC. We want this export to be produced on
        # 19:45 CE(S)T, which doesn't have a single UTC representation. So,
        # we trigger this job twice. Once on CET and once on CEST. This step
        # checks if it was 19:NN CE(S)T, and only allows one of the two to
        # trigger the rest of this workflow.

        HOUR=$(TZ=Europe/Amsterdam date +%H)
        if [ "${HOUR}" = "${{ env.SCHEDULE_HOUR }}" ]; then
          RUN_EINTS=1
        else
          RUN_EINTS=0
        fi

        echo "Current hour in CE(S)T: ${HOUR}"
        echo "Scheduled hour: ${{ env.SCHEDULE_HOUR }}"
        echo "Run eints to git: ${RUN_EINTS}"

        echo "::set-output name=run_eints::${RUN_EINTS}"

    - name: Checkout
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/eints
        ref: openttd-github

    - name: Checkout OpenTTD-eints-test
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/eints-sandbox
        path: scripts/eints-sandbox
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Checkout OpenTTD
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/OpenTTD
        path: scripts/OpenTTD
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Checkout OpenGFX
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/OpenGFX
        path: scripts/OpenGFX
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Checkout OpenSFX
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/OpenSFX
        path: scripts/OpenSFX
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Checkout OpenMSX
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/OpenMSX
        path: scripts/OpenMSX
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Checkout steam-data
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/checkout@v2
      with:
        repository: OpenTTD/steam-data
        path: scripts/steam-data
        token: ${{ secrets.EINTS_GITHUB_TOKEN }}

    - name: Set up Python 3.8
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Prepare git
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      run: |
        git config --global user.email "translators@openttd.org"
        git config --global user.name "translators"

    - name: Export staging
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      run: |
        cd scripts

        printf "username:translators\npassword:${TRANSLATORS_STAGING}\n" > user.cfg

        echo "Syncing eints-sandbox"
        python eintsgit.py --project openttd-master --working-copy eints-sandbox --base-url https://translator.staging.openttd.org --lang-dir src/lang --unstable-lang-dir src/lang/unfinished --lang-file-ext .txt commit-to-git
        python eintsgit.py --project openttd-master --working-copy eints-sandbox --base-url https://translator.staging.openttd.org --lang-dir src/lang --unstable-lang-dir src/lang/unfinished --lang-file-ext .txt --force update-from-git

      env:
        TRANSLATORS_STAGING: ${{ secrets.TRANSLATORS_STAGING }}

    - name: Export production
      if: github.event_name == 'workflow_dispatch' || steps.cest_time.outputs.run_eints != '0'
      run: |
        cd scripts

        printf "username:translators\npassword:${TRANSLATORS_PRODUCTION}\n" > user.cfg

        echo "Syncing OpenTTD"
        python eintsgit.py --project openttd-master --working-copy OpenTTD --base-url https://translator.openttd.org --lang-dir src/lang --unstable-lang-dir src/lang/unfinished --lang-file-ext .txt commit-to-git
        python eintsgit.py --project openttd-master --working-copy OpenTTD --base-url https://translator.openttd.org --lang-dir src/lang --unstable-lang-dir src/lang/unfinished --lang-file-ext .txt --force update-from-git

        echo "Syncing OpenGFX"
        python eintsgit.py --project opengfx --working-copy OpenGFX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng commit-to-git
        python eintsgit.py --project opengfx --working-copy OpenGFX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng --force update-from-git

        echo "Syncing OpenSFX"
        python eintsgit.py --project opensfx --working-copy OpenSFX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng commit-to-git
        python eintsgit.py --project opensfx --working-copy OpenSFX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng --force update-from-git

        echo "Syncing OpenMSX"
        python eintsgit.py --project openmsx --working-copy OpenMSX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng commit-to-git
        python eintsgit.py --project openmsx --working-copy OpenMSX --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .lng --force update-from-git

        echo "Syncing steam-data"
        python eintsgit.py --project steam-data --working-copy steam-data --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .txt commit-to-git
        python eintsgit.py --project steam-data --working-copy steam-data --base-url https://translator.openttd.org --lang-dir lang --lang-file-ext .txt --force update-from-git

      env:
        TRANSLATORS_PRODUCTION: ${{ secrets.TRANSLATORS_PRODUCTION }}
