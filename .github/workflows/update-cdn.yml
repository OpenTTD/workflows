name: Update CDN

on:
  repository_dispatch:
    types:
    - update-cdn

# client_payload should contain:
#  - version: the version of the new release, e.g.: 20200101-master-g12345
#  - folder: the folder in which the release is located openttd-nightlies/2020

jobs:
  update_cdn:
    name: Update CDN
    runs-on: ubuntu-latest

    steps:
    - name: Sanity check
      run: |
        set -x

        if [ -z "${{ github.event.client_payload.version }}" ]; then
          echo "::error::version in client_payload is not set"
          exit 1
        fi
        if [ -z "${{ github.event.client_payload.folder }}" ]; then
          echo "::error::folder in client_payload is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CDN_S3_BUCKET }}" ]; then
          echo "::error::secret CDN_S3_BUCKET is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CDN_CF_DISTRIBUTION_ID }}" ]; then
          echo "::error::secret CDN_CF_DISTRIBUTION_ID is not set"
          exit 1
        fi

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r cdn/requirements.txt

    # By default, mime.types doesn't include one for YAML files. This results
    # in "binary/octet-stream" as content-type on the CDN, which means
    # browsers want to download the file instead of showing it inline. By
    # adding this entry to mime.types, we fix that problem.
    - name: Fix mimetypes
      run: |
        echo "text/vnd.yaml  yaml" | sudo tee -a /etc/mime.types

    - name: Publish CDN files
      run: |
        set -x

        cd cdn

        python -m cdn_generator --bucket-id ${{ secrets.CDN_S3_BUCKET }} --new-release ${{ github.event.client_payload.folder }}/${{ github.event.client_payload.version }}

        aws s3 cp --recursive --only-show-errors generated/ s3://${{ secrets.CDN_S3_BUCKET }}/
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_CF_DISTRIBUTION_ID }} --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Trigger 'publish website' (Staging)
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.DEPLOYMENT_TOKEN }}
        repository: OpenTTD/website
        event-type: publish_master

    - name: Trigger 'publish website' (Production)
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.DEPLOYMENT_TOKEN }}
        repository: OpenTTD/website
        event-type: publish_latest_tag
